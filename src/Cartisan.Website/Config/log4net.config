<?xml version="1.0" encoding="utf-8" ?>
<log4net>

<!-- 如果你希望看到更多的输出，首先要做的就是把 root/priority/@value 设置成 "INFO" 或 "ALL"。 -->
    <root>
        <!-- priority 的值有： ALL, DEBUG, INFO, WARN, ERROR, FATAL, OFF. -->
        <priority value="WARN" />
        <appender-ref ref="errorAppender" />
        <appender-ref ref="debugAppender" />
    </root>

    <logger name="Cartisan">
        <!-- 记录 Cartisan 发送的调试信息 -->
        <priority value="DEBUG" />
<!--        <appender-ref ref="errorAppender" />-->
<!--        <appender-ref ref="debugAppender" />-->
        <appender-ref ref="debugger"/>
        <!-- 注意：如里你把 <appender-ref ref="debugger"/> 放到 root 里，那么您将看到 NHibernate 的跟踪调试信息 -->
    </logger>
    
    <logger name="Cartisan.Admin.Controllers.TestController">
        <!-- 记录 Cartisan 发送的调试信息 -->
        <priority value="WARN" />
<!--        <appender-ref ref="errorAppender" />-->
<!--        <appender-ref ref="debugAppender" />-->
        <appender-ref ref="debugger"/>
        <!-- 注意：如里你把 <appender-ref ref="debugger"/> 放到 root 里，那么您将看到 NHibernate 的跟踪调试信息 -->
    </logger>

    <logger name="NHibernate.Cache">
        <!-- 这个日志来源记录非常详细，设置优先级降低跟踪级别来避免洪水一样的日志信息 -->
        <priority value="ERROR" />
    </logger>

    <logger name="NHibernate.AdoNet.AbstractBatcher">
        <!-- 记录表语句执行失败时的日志 -->
        <priority value="OFF" />
    </logger>

    <logger name="NHibernate.Util.ADOExceptionReporter">
        <!--记录表语句执行失败时的日志 -->
        <priority value="OFF" />
    </logger>

    <appender name="debugger" type="log4net.Appender.DebugAppender">
        <!-- 发送日志消息给 Visual Studio -->
        <immediateFlush value="true" />
        <layout type="log4net.Layout.SimpleLayout" />
    </appender>

    <appender name="debugAppender" type="log4net.Appender.RollingFileAppender,log4net">
        <!-- 发送日志消息到 App_Data 下的文件中 -->
        <!-- 日志文件路径，“/”与“\”作用相同，到达的目录相同，文件夹不存在则新建 -->
        <!-- 按文件大小方式输出时在这里指定文件名，并且当天的日志在下一天时在文件名后自动追加当天日期形成新文件。-->
        <!-- 按照日期形式输出时，直接连接元素DatePattern的value形成文件路径。 -->
        <file value="App_Data/Logs/cartisan-debug" />
        <!-- 是否追加到文件 -->
        <appendToFile value="true" />
        <!-- 使用Unicode编码 -->
        <Encoding value="UTF-8" />
        <!-- 是否及时写入错误日志，避免因突然中止造成数据丢失 -->
        <immediateFlush value="true" />
        <!-- 最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数 -->
        <maxSizeRollBackups value="10" />
        <!-- 是否只写到一个文件中 -->
        <staticLogFileName value="false" />
        <!-- 按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite]) -->
        <rollingStyle value="Date" />
        <!-- 按日期产生文件夹和文件名［在日期方式与混合方式下使用］-->
        <datepattern value="-yyyy.MM.dd'.log'" />
        <!-- 这是按日期产生文件夹，并在文件名前也加上日期 -->
        <!-- <param name="DatePattern" value="yyyyMMdd/yyyyMMdd&quot;-TimerServer.log&quot;"  />-->
        <!-- 这是先按日期产生文件夹，再形成下一级固定的文件夹 -->
        <!-- <param name="DatePattern" value="yyyyMMdd/&quot;TimerServer/TimerServer.log&quot;"  />-->

        <!-- 每个文件的大小。只在混合方式与文件大小方式下使用。
            超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。
            可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志 -->
        <param name="maximumFileSize" value="5MB" />
        <!-- 记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全 -->
        <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
        <!-- 计数类型为1，2，3…-->
        <!-- <param name="CountDirection" value="1"/>-->

        <!-- 过滤设置，LevelRangeFilter为使用的过滤器。 -->
        <filter type="log4net.Filter.LevelRangeFilter">
            <levelMax value="INFO" />
        </filter>
        <!--记录的格式。一般用log4net.Layout.PatternLayout布局-->
        <layout type="log4net.Layout.PatternLayout">
            <conversionPattern value="%date [%p] [%logger] [%thread] - %message%newline" />
        </layout>
    </appender>

    <appender name="errorAppender" type="log4net.Appender.RollingFileAppender,log4net">
        <file value="App_Data/Logs/cartisan-error" />
        <appendToFile value="true" />
        <Encoding value="UTF-8" />
        <immediateFlush value="true" />
        <maxSizeRollBackups value="10" />
        <staticLogFileName value="false" />
        <rollingStyle value="Date" />
        <datepattern value="-yyyy.MM.dd'.log'" />
        <param name="maximumFileSize" value="5MB" />
        <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
        <filter type="log4net.Filter.LevelRangeFilter">
            <levelMin value="WARN" />
        </filter>
        <layout type="log4net.Layout.PatternLayout">
            <conversionPattern value="%date [%p] [%logger] [%thread] - %message%newline" />
        </layout>
    </appender>

</log4net>
